#!/bin/sh
#
# Simple Redis init.d script conceived to work on Linux systems
# as it does use of the /proc filesystem.
#
# description: Redis is an in memory key-value store database
#
### BEGIN INIT INFO
# Provides: redissentinel_<%=@name%>
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Description: redissentinel_<%=@name%> init script
### END INIT INFO

SENTINELNAME=<%= @name %>
<% case @platform %>
<% when 'ubuntu','debian','fedora' %>
EXEC="su -s /bin/sh -c '<%= File.join(@bin_path, 'redis-server') %> <%= @configdir %>/${SENTINELNAME}.conf --sentinel' <%= @user %>"
<% else %>
EXEC="runuser <%= @user %> -c \"<%= File.join(@bin_path, 'redis-server') %> <%= @configdir %>/${SENTINELNAME}.conf --sentinel\""
<% end %>
CLIEXEC=<%= File.join(@bin_path, 'redis-cli') %>

PIDFILE=<%= @piddir %>/sentinel_${SENTINELNAME}.pid

PID=`ps -ef | grep 'redis' | grep ':26379' | awk '{print $2}'`

if [ ! -d <%= @piddir %> ]; then
    mkdir -p <%= @piddir %>
    chown <%= @user %>  <%= @piddir %>
fi

case "$1" in
    status)
        if [ ! X"$PID" = X ]
        then
          echo "redis$SENTINELNAME $PIDFILE exists, pid is ($PID), should be running"
          exit 0
        else
          echo "redis$SENTINELNAME doesn't exist"
          exit 3
        fi
        ;;
    start)
        if [ X"$PID" = X ]
        then
                echo "$PID exists, process is already running"
                echo "$PID" > "$PIDFILE"
        else
                echo "Starting Redis server..."
                eval $EXEC
                PID=`ps -ef | grep 'redis' | grep ':26379' | awk '{print $2}'`
                echo "$PID" > "$PIDFILE"
        fi
        ;;
    stop)
        if [ X"$PID" = X ]
        then
                echo "$PID does not exist, process is not running"
        else
                echo "Stopping ..."

                kill ${PID}

                while [ -x /proc/${PID} ]
                do
                    echo "Waiting for Redis to shutdown ..."
                    sleep 1
                done
                echo "Redis stopped"
        fi
        ;;
    *)
        echo "Please use start or stop as first argument"
        ;;
esac
